# define the prompt depending on some variables:

# one line function to safely source files
function sourceit(){ [ -r "$1" ] && [ -f "$1" ] && source "$1"; }

sourceit $HOME/.functions

hosname=`hostname`
if [ ! -e $HOME/.name ] || [ ! -r $HOME/.name ]; then
  pref="generic" 
else
  pref=`grep -v '#' $HOME/.name | head -n 1`
fi

# see https://github.com/mathiasbynens/dotfiles/blob/master/.bash_prompt
bold='';
reset="\e[m";
black="\e[1;30m";
blue="\e[1;34m";
cyan="\e[1;36m";
green="\e[1;32m";
orange="\e[1;33m";
purple="\e[1;35m";
red="\e[1;31m";
violet="\e[1;35m";
white="\e[1;37m";
yellow="\e[1;33m";
grey="\e[30;1m"
brown="\e[0;33m"

# show user only if it is root
if [[ "${USER}" == "root" ]]; then
  user="<root>";
else
  user="";
fi;

# Highlight the hostname when connected via SSH.
if [[ "${SSH_TTY}" ]]; then
  hostStyle="${bold}${red}";
else
  hostStyle="${yellow}";
fi;

# illumina Chesterford isilon
case $pref in
  generic|white)
  color=$white
  ;;
  chuk-isilon|purple)
  color=$purple
  ;;
  cygwin|cyan)
  color=$cyan
  ;;
  *)
  PS1="\[\e[36m\][\W]\$ \[\e[0m\]"
esac

divs=${grey}
repo=${orange}
modified=${red}
staged=${green}

PS1="\[${divs}\]("
PS1+="\[${color}\]"; # set starting color
PS1+="\w"; # working directory
PS1+="\[${divs}\])-("; # working directory
PS1+="\[${color}\]"; # set starting color
PS1+="\[${repo}\]\$(__git_ps1)"; # white git branch
PS1+="\[${divs}\]:"
PS1+="\[${staged}\]\$(__git_staged)"
PS1+="\[${divs}\],"
PS1+="\[${modified}\]\$(__git_modified)"
PS1+="\[${divs}\])\n"
PS1+="\[${color}\]\$ \[${reset}\]"; # newline, $, space and reset color

export PS1;
